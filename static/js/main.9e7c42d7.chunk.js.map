{"version":3,"sources":["tools/Pos.ts","tools/physics.ts","tools/index.ts","state/actions.ts","state/reducer.ts","state/selectors.ts","state/index.ts","middleware/index.ts","Bird.tsx","SlingShot.tsx","Canvas.tsx","hooks/useBounds.ts","hooks/useMouse.ts","Controls.tsx","App.tsx","hooks/useReducer.ts","index.tsx"],"names":["Pos","x","y","rhs","this","f","Math","sqrt","width","height","G_ACCEL","classNames","ns","map","n","Object","keys","filter","k","join","String","ActionType","updateBounds","bounds","type","UpdateBounds","payload","mouseDownBird","MouseDownBird","mouseMove","pos","MouseMove","mouseUp","MouseUp","launch","Launch","updateAnim","time","UpdateAnim","completeAnim","CompleteAnim","reset","Reset","reducer","state","initState","action","reduceUpdateBounds","reduceMouseDownBird","reduceMouseMove","reduceMouseUp","reduceLaunch","reduceUpdateAnim","reduceCompleteAnim","reduceReset","animStatus","AnimStatus","Interactive","dragSubject","DragSubject","Bird","None","birdPos","Animating","Done","LAUNCH_POS","launchPos","fromPc","animFn","trajectory","sling","showSling","undefined","canReset","canInteract","readyToLaunch","trajectoryPath","root1","root2","control","animDuration","cachedAnswer","cachedArgs","pos0","fixedPos","diff","minus","angle","atan2","v0","SPRING_K","magnitude","v0X","cos","v0Y","sin","descrim","root2T","apexT","root1X","root2X","apexX","controlY","springT","PI","t","progress","plus","scale","tNorm","slingShotTrajectory","left","top","StateContext","React","createContext","dispatch","animate","A","S","duration","start","step","timestamp","requestAnimationFrame","run","props","interactive","onMouseDown","className","cx","cy","r","SlingShot","slingPos","x1","y1","x2","y2","Canvas","useContext","ref","useRef","onChange","useState","setBounds","handler","recompute","useCallback","current","getBoundingClientRect","useLayoutEffect","window","addEventListener","removeEventListener","useBounds","w","h","transform","handlers","handleMove","e","clientX","clientY","onMove","handleUp","onUp","document","useMouse","toPc","d","Controls","id","onClick","disabled","App","middlewares","useReducer","reverse","forEach","mw","Provider","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e7c42d7.chunk.js","sourcesContent":["export class Pos {\n  constructor(public x: number, public y: number) {}\n\n  plus(rhs: Pos): Pos {\n    return new Pos(this.x + rhs.x, this.y + rhs.y);\n  }\n\n  minus(rhs: Pos): Pos {\n    return new Pos(this.x - rhs.x, this.y - rhs.y);\n  }\n\n  scale(f: number): Pos {\n    return new Pos(f * this.x, f * this.y);\n  }\n\n  magnitude(): number {\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\n  }\n\n  toPc(width: number, height: number): Pos {\n    return new Pos(this.x / width, this.y / height);\n  }\n\n  fromPc(width: number, height: number): Pos {\n    return new Pos(this.x * width, this.y * height);\n  }\n}\n","import { Pos } from './Pos';\n\nexport const G_ACCEL = 1000;\nexport const PROJECTILE_MASS = 1;\nexport const SPRING_K = 30;\n\n// Compute information about the trajectory of a sling-shot whose mass is\n// stretched on a classical spring stretched to `pos0` from `fixedPos`. For\n// the sake of simplicity, we assume that the mass is entirely under the\n// influence of the spring/elastic until it reaches the position `fixedPos`;\n// at this point, its trajectory is entirely ballistic.\nexport function slingShotTrajectory(\n  pos0: Pos,\n  fixedPos: Pos\n): SlingShotTrajectory {\n  const diff = fixedPos.minus(pos0);\n  const angle = Math.atan2(diff.y, diff.x);\n\n  // SIMPLIFICATION assume all of the potential energy from the spring\n  // contributes to the mass's initial velocity.\n  const v0 = Math.sqrt(SPRING_K / PROJECTILE_MASS) * diff.magnitude();\n\n  const v0X = v0 * Math.cos(angle);\n  const v0Y = v0 * Math.sin(angle);\n\n  // The square-root of the descriminant, used to compute the roots of the\n  // parabolic trajectory.\n  const descrim = Math.sqrt(v0Y ** 2 + 2 * G_ACCEL * fixedPos.y);\n\n  // The times at which the roots and apex are achieved, assuming t=0 when\n  // the mass's position is equal to `fixedPos`.\n  const root1T = (v0Y - descrim) / G_ACCEL;\n  const root2T = (v0Y + descrim) / G_ACCEL;\n  const apexT = v0Y / G_ACCEL;\n\n  const root1X = v0X * root1T + fixedPos.x;\n  const root2X = v0X * root2T + fixedPos.x;\n\n  const apexX = (root1X + root2X) / 2;\n  const apexY = -0.5 * G_ACCEL * apexT ** 2 + v0Y * apexT + fixedPos.y;\n\n  // Computing the control point from the apex uses a nice feature of\n  // quadratic bezier curves.\n  // TODO explain this feature.\n  const controlY = apexY * 2;\n\n  const root1 = new Pos(root1X, 0);\n  const root2 = new Pos(root2X, 0);\n  const control = new Pos(apexX, controlY);\n\n  // Animation calculations\n  // The amount of time the mass spends entirely under the influence of the\n  // spring/elastic.\n  const springT = (Math.PI / 2) * Math.sqrt(PROJECTILE_MASS / SPRING_K);\n\n  const animFn = (t: number) => {\n    if (t <= springT) {\n      const progress = 1 - Math.cos(Math.sqrt(SPRING_K / PROJECTILE_MASS) * t);\n      return { showSling: true, birdPos: pos0.plus(diff.scale(progress)) };\n    } else {\n      const tNorm = t - springT;\n      const x = v0X * tNorm + fixedPos.x;\n      const y = -0.5 * G_ACCEL * tNorm ** 2 + v0Y * tNorm + fixedPos.y;\n      // We hide the sling once the bird is in flight.\n      return { showSling: false, birdPos: new Pos(x, y) };\n    }\n  };\n\n  const animDuration = springT + root2T;\n\n  return { root1, root2, control, animFn, animDuration };\n}\n\nexport interface SlingShotTrajectory {\n  root1: Pos;\n  root2: Pos;\n  control: Pos;\n  animDuration: number;\n  animFn: (t: number) => SlingShotAnimState;\n}\n\nexport interface SlingShotAnimState {\n  birdPos: Pos;\n  showSling: boolean;\n}\n","export * from './Pos';\nexport * from './physics';\n\n// Form a compound class name from the provided arguments. Objects\n// contribute their keys as class names, but only those keys whose\n// values are truthy. Other values are converted to strings using the\n// `String` function.\nexport function classNames(...ns: any[]): string {\n  return ns\n    .map(n => {\n      if (n && typeof n === 'object') {\n        return Object.keys(n)\n          .filter(k => n[k])\n          .join(' ');\n      } else {\n        return String(n);\n      }\n    })\n    .join(' ');\n}\n","import { Pos } from '../tools';\nimport { Bounds } from '../hooks';\n\nexport interface Action {\n  type: string;\n  payload?: any;\n}\n\nexport enum ActionType {\n  UpdateBounds = 'UpdateBounds',\n  MouseDownBird = 'MouseDownBird',\n  MouseMove = 'MouseMove',\n  MouseUp = 'MouseUp',\n  UpdateAnim = 'UpdateAnim',\n  Launch = 'Launch',\n  CompleteAnim = 'CompleteAnim',\n  Reset = 'Reset',\n}\n\nexport function updateBounds(bounds: Bounds): Action {\n  return { type: ActionType.UpdateBounds, payload: bounds };\n}\n\nexport function mouseDownBird(): Action {\n  return { type: ActionType.MouseDownBird };\n}\n\nexport function mouseMove(pos: Pos): Action {\n  return { type: ActionType.MouseMove, payload: pos };\n}\n\nexport function mouseUp(): Action {\n  return { type: ActionType.MouseUp };\n}\n\nexport function launch(): Action {\n  return { type: ActionType.Launch };\n}\n\nexport function updateAnim(time: number): Action {\n  return { type: ActionType.UpdateAnim, payload: time };\n}\n\nexport function completeAnim(time: number): Action {\n  return { type: ActionType.CompleteAnim, payload: time };\n}\n\nexport function reset(): Action {\n  return { type: ActionType.Reset };\n}\n","import { State, initState, DragSubject, AnimStatus, LAUNCH_POS } from './index';\nimport { Action, ActionType } from './actions';\nimport { Bounds } from '../hooks';\nimport { Pos } from '../tools';\n\nexport function reducer(state: State = initState, action: Action): State {\n  switch (action.type) {\n    case ActionType.UpdateBounds:\n      return reduceUpdateBounds(state, action.payload);\n    case ActionType.MouseDownBird:\n      return reduceMouseDownBird(state);\n    case ActionType.MouseMove:\n      return reduceMouseMove(state, action.payload);\n    case ActionType.MouseUp:\n      return reduceMouseUp(state);\n    case ActionType.Launch:\n      return reduceLaunch(state);\n    case ActionType.UpdateAnim:\n      return reduceUpdateAnim(state, action.payload);\n    case ActionType.CompleteAnim:\n      return reduceCompleteAnim(state, action.payload);\n    case ActionType.Reset:\n      return reduceReset(state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceUpdateBounds(state: State, bounds: Bounds): State {\n  return { ...state, bounds };\n}\n\nfunction reduceMouseDownBird(state: State): State {\n  if (state.animStatus !== AnimStatus.Interactive) {\n    return state;\n  } else {\n    return { ...state, dragSubject: DragSubject.Bird };\n  }\n}\n\nfunction reduceMouseMove(state: State, pos: Pos): State {\n  if (state.dragSubject === DragSubject.None) {\n    return state;\n  } else {\n    return { ...state, birdPos: pos };\n  }\n}\n\nfunction reduceMouseUp(state: State): State {\n  return { ...state, dragSubject: DragSubject.None };\n}\n\nfunction reduceLaunch(state: State): State {\n  return { ...state, animStatus: AnimStatus.Animating };\n}\n\nfunction reduceUpdateAnim(state: State, time: number): State {\n  return { ...state, time };\n}\n\nfunction reduceCompleteAnim(state: State, time: number): State {\n  return {\n    ...state,\n    time,\n    animStatus: AnimStatus.Done,\n  };\n}\n\nfunction reduceReset(state: State): State {\n  return {\n    ...state,\n    birdPos: LAUNCH_POS,\n    time: 0,\n    animStatus: AnimStatus.Interactive,\n  };\n}\n","import { State, DragSubject, AnimStatus, LAUNCH_POS } from './index';\nimport { Pos, slingShotTrajectory, SlingShotTrajectory } from '../tools';\n\nexport function launchPos(state: State): Pos {\n  const { width, height } = state.bounds;\n  return LAUNCH_POS.fromPc(width, height);\n}\n\nexport function birdPos(state: State): Pos {\n  const { width, height } = state.bounds;\n  if (state.animStatus === AnimStatus.Interactive) {\n    return state.birdPos.fromPc(width, height);\n  } else {\n    const { animFn } = trajectory(state);\n    return animFn(state.time).birdPos;\n  }\n}\n\nexport function sling(state: State): Pos | undefined {\n  const { width, height } = state.bounds;\n  if (state.animStatus === AnimStatus.Interactive) {\n    return state.birdPos.fromPc(width, height);\n  } else {\n    const { animFn } = trajectory(state);\n    const { showSling, birdPos } = animFn(state.time);\n    return showSling ? birdPos : undefined;\n  }\n}\n\nexport function canReset(state: State): boolean {\n  return state.animStatus === AnimStatus.Done;\n}\n\nexport function canInteract(state: State): boolean {\n  return state.animStatus === AnimStatus.Interactive;\n}\n\nexport function readyToLaunch(state: State): boolean {\n  return state.dragSubject === DragSubject.Bird;\n}\n\nexport function trajectoryPath(state: State): string {\n  const { root1, root2, control } = trajectory(state);\n  return `M ${root1.x} ${root1.y}\n          Q ${control.x} ${control.y},\n            ${root2.x} ${root2.y}`;\n}\n\nexport function animDuration(state: State): number {\n  return trajectory(state).animDuration;\n}\n\nexport function animFn(state: State) {\n  return trajectory(state).animFn;\n}\n\n// A memoized function computing the bird's trajectory information from the\n// current state. This is a small wrapper over `slingShotTrajectory` that\n// caches the most recent return value and converts from percentages to SVG\n// units.\nconst trajectory = (() => {\n  let cachedArgs = {\n    birdPos: undefined as any,\n    bounds: undefined as any,\n  };\n  let cachedAnswer: SlingShotTrajectory;\n\n  return (state: State) => {\n    if (\n      cachedAnswer &&\n      state.birdPos === cachedArgs.birdPos &&\n      state.bounds === cachedArgs.bounds\n    ) {\n      return cachedAnswer;\n    }\n\n    cachedArgs = { birdPos: state.birdPos, bounds: state.bounds };\n\n    const { width, height } = state.bounds;\n    cachedAnswer = slingShotTrajectory(\n      state.birdPos.fromPc(width, height),\n      launchPos(state)\n    );\n    return cachedAnswer;\n  };\n})();\n","import React from 'react';\nimport { Pos } from '../tools';\nimport { Bounds } from '../hooks';\nimport { Action } from './actions';\n\nexport * from './reducer';\nexport * as Actions from './actions';\nexport * as Selectors from './selectors';\n\nexport interface State {\n  bounds: Bounds;\n  birdPos: Pos;\n  dragSubject: DragSubject;\n  animStatus: AnimStatus;\n  time: number;\n}\n\nexport enum DragSubject {\n  None = 'None',\n  Bird = 'Bird',\n}\n\nexport enum AnimStatus {\n  Interactive = 'Interactive',\n  Animating = 'Animating',\n  Done = 'Done',\n}\n\n// The launch position (in terms of percentages of the canvas' width and\n// height).\nexport const LAUNCH_POS = new Pos(-0.35, 0.2);\n\nexport const initState: State = {\n  bounds: { width: 0, height: 0, left: 0, top: 0 },\n  birdPos: LAUNCH_POS,\n  dragSubject: DragSubject.None,\n  animStatus: AnimStatus.Interactive,\n  time: 0,\n};\n\nexport const StateContext = React.createContext({\n  state: null as any as State,\n  dispatch: null as any as React.Dispatch<Action>,\n});\n","import React from 'react';\nimport { Middleware } from '../hooks';\nimport { State, Actions as A, Selectors as S } from '../state';\n\n// If the user releases the mouse and the conditions are right (i.e. they\n// were interacting with the bird), we switch modes and run the animation.\nexport function animate(): Middleware<State, A.Action> {\n  return (state: State, dispatch: React.Dispatch<A.Action>) => {\n    return (action: A.Action) => {\n      if (action.type === A.ActionType.MouseUp && S.readyToLaunch(state)) {\n        dispatch(A.launch());\n        run(S.animDuration(state), dispatch);\n      }\n\n      dispatch(action);\n    };\n  };\n}\n\n// Dispatch an action to update the current time (in seconds) with each\n// repaint. Note that since the user has no way of pausing or stopping the\n// animation, we don't need to keep track of the `requestAnimationFrame`\n// handle, as we normally would.\nfunction run(duration: number, dispatch: React.Dispatch<A.Action>) {\n  let start: number;\n\n  function step(timestamp: number) {\n    if (!start) {\n      start = timestamp;\n    }\n\n    const frame = timestamp - start;\n    const time = frame / 1000;\n    if (time >= duration) {\n      dispatch(A.completeAnim(duration));\n    } else {\n      requestAnimationFrame(step);\n      dispatch(A.updateAnim(time));\n    }\n  }\n\n  requestAnimationFrame(step);\n  dispatch(A.updateAnim(0));\n}\n","import React from 'react';\nimport { Pos, classNames } from './tools';\n\nexport interface BirdProps {\n  pos: Pos;\n  interactive: boolean;\n  onMouseDown: () => void;\n}\n\nconst Bird: React.FC<BirdProps> = props => {\n  const { pos, interactive, onMouseDown } = props;\n\n  return (\n    <circle\n      className={classNames('bird', { interactive })}\n      onMouseDown={onMouseDown}\n      cx={pos.x}\n      cy={pos.y}\n      r=\"13\"\n    />\n  );\n};\n\nexport default Bird;\n","import React from 'react';\nimport { Pos } from './tools';\n\nexport interface SlingShotProps {\n  launchPos: Pos;\n  slingPos?: Pos;\n}\n\nconst SlingShot: React.FC<SlingShotProps> = props => {\n  const { launchPos, slingPos } = props;\n\n  return (\n    <g className=\"sling-shot\">\n      <line x1={launchPos.x} y1=\"0\" x2={launchPos.x} y2={launchPos.y} />\n      {slingPos && (\n        <line\n          x1={launchPos.x}\n          y1={launchPos.y}\n          x2={slingPos.x}\n          y2={slingPos.y}\n        />\n      )}\n    </g>\n  );\n};\n\nexport default SlingShot;\n","import React from 'react';\nimport { StateContext, Selectors as S, Actions as A } from './state';\nimport { useBounds, useMouse } from './hooks';\nimport { Pos } from './tools';\nimport Bird from './Bird';\nimport SlingShot from './SlingShot';\n\nconst Canvas: React.VFC = () => {\n  const { state, dispatch } = React.useContext(StateContext);\n  const ref = React.useRef(null);\n  const bounds = useBounds(ref, bounds => dispatch(A.updateBounds(bounds)));\n\n  const { width: w, height: h } = bounds;\n  const transform = `translate(${w / 2} ${h}) scale(1 -1)`;\n\n  useMouse(bounds, {\n    onMove: pos =>\n      dispatch(A.mouseMove(new Pos(pos.x - w / 2, h - pos.y).toPc(w, h))),\n    onUp: () => dispatch(A.mouseUp()),\n  });\n\n  function handleMouseDown() {\n    return dispatch(A.mouseDownBird());\n  }\n\n  const launchPos = S.launchPos(state);\n  const birdPos = S.birdPos(state);\n  const sling = S.sling(state);\n  const trajectoryPath = S.trajectoryPath(state);\n  const canInteract = S.canInteract(state);\n\n  return (\n    <svg className=\"canvas\" ref={ref}>\n      <g transform={transform}>\n        <SlingShot launchPos={launchPos} slingPos={sling} />\n\n        {/* A graph of the trajectory, rendered using a quadratic bezier curve */}\n        <path className=\"trajectory\" d={trajectoryPath} />\n\n        <Bird\n          pos={birdPos}\n          interactive={canInteract}\n          onMouseDown={handleMouseDown}\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\n\nexport function useBounds<T extends SVGElement>(\n  ref: React.RefObject<T>,\n  onChange: (bounds: Bounds) => void\n): Bounds {\n  const [bounds, setBounds] = React.useState({\n    width: 0,\n    height: 0,\n    left: 0,\n    top: 0,\n  });\n\n  const handler = React.useRef(onChange);\n\n  const recompute = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const { width, height, left, top } = ref.current.getBoundingClientRect();\n    setBounds({ width, height, left, top });\n    handler.current({ width, height, left, top });\n  }, [ref, handler]);\n\n  React.useLayoutEffect(() => {\n    recompute();\n\n    window.addEventListener('resize', recompute);\n    return () => window.removeEventListener('resize', recompute);\n  }, [recompute]);\n\n  return bounds;\n}\n\nexport interface Bounds {\n  width: number;\n  height: number;\n  left: number;\n  top: number;\n}\n","import React from 'react';\nimport { Pos } from '../tools';\nimport { Bounds } from './useBounds';\n\nexport function useMouse(bounds: Bounds, handlers: UseMouseHandlers) {\n  React.useLayoutEffect(() => {\n    function handleMove(e: MouseEvent) {\n      const { clientX, clientY } = e;\n      const { left, top } = bounds;\n      handlers.onMove(new Pos(clientX - left, clientY - top));\n    }\n\n    function handleUp() {\n      handlers.onUp();\n    }\n\n    document.addEventListener('mousemove', handleMove);\n    document.addEventListener('mouseup', handleUp);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('mouseup', handleUp);\n    };\n  }, [bounds, handlers]);\n}\n\nexport interface UseMouseHandlers {\n  onMove: (pos: Pos) => void;\n  onUp: () => void;\n}\n","import React from 'react';\nimport { StateContext, Actions as A, Selectors as S } from './state';\n\nconst Controls: React.VFC = () => {\n  const { state, dispatch } = React.useContext(StateContext);\n\n  function handleReset() {\n    return dispatch(A.reset());\n  }\n\n  return (\n    <nav id=\"controls\">\n      <button onClick={handleReset} disabled={!S.canReset(state)}>\n        Reset\n      </button>\n    </nav>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport { StateContext, reducer, initState } from './state';\nimport { animate } from './middleware';\nimport { useReducer } from './hooks';\nimport Canvas from './Canvas';\nimport Controls from './Controls';\n\nconst App: React.VFC = () => {\n  const [state, dispatch] = useReducer(reducer, initState, animate());\n\n  return (\n    <StateContext.Provider value={{ state, dispatch }}>\n      <main>\n        <Canvas />\n        <Controls />\n      </main>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nexport function useReducer<St, A>(\n  reducer: React.Reducer<St, A>,\n  initState: St,\n  ...middlewares: Middleware<St, A>[]\n): [St, React.Dispatch<A>] {\n  let [state, dispatch] = React.useReducer(reducer, initState);\n\n  middlewares = [...middlewares];\n  middlewares.reverse();\n  middlewares.forEach(mw => {\n    dispatch = mw(state, dispatch);\n  });\n\n  return [state, dispatch];\n}\n\nexport interface Middleware<St, A> {\n  (state: St, dispatch: React.Dispatch<A>): React.Dispatch<A>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}